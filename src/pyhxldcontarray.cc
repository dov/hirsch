// Autogenerated file for halcon type HXLDContArray

#include "pyhirsch.h"

static void
PyHirschXLDContArray_dealloc(PyHirschXLDContArray* self)
{
    if(self->XLDContArray)
        delete self->XLDContArray;
    PyObject_Del(self);
}

static int
PyHirschXLDContArray_init(PyHirschXLDContArray *self, PyObject *args, PyObject */*kwds*/)
{
    PyObject *obj;
  
    if (PyArg_ParseTuple(args,"O",&obj)) {
        if (PyHirschXLDArray_Check(obj))
            self->XLDContArray = new Halcon::HXLDContArray(*(((PyHirschXLDArray*)obj)->XLDArray));
        else if (PyHirschXLDContArray_Check(obj))
            self->XLDContArray = new Halcon::HXLDContArray(*(((PyHirschXLDContArray*)obj)->XLDContArray));
    }
    else
      // Create an empty cont array by default.
      self->XLDContArray = new Halcon::HXLDContArray();

    return 0;
}

#include "hxldcontarray_autogen_methods_declarations.i"

static PyMethodDef PyHirschXLDContArray_methods[] = {
#include "hxldcontarray_autogen_methods_list.i"
    {NULL}  /* Sentinel */
};

Py_ssize_t PyHirschXLDContArray_Length(PyObject *o)
{
    return ((PyHirschXLDContArray*)o)->XLDContArray->Num();
}

PyObject *
PyHirschXLDContArray_GetItem(PyObject *self, Py_ssize_t i)
{
    Halcon::HXLDContArray *XLDContArray = (((PyHirschXLDContArray*)self)->XLDContArray);
    Halcon::HXLDCont XLDCont((*XLDContArray)[i]);

    return PyHirschXLDCont_FromHXLDCont(XLDCont);
}

static PySequenceMethods PyHirschXLDContArray_sequence_methods = {
    PyHirschXLDContArray_Length,                /* sq_length */
    0,                                   /* sq_concat */
    0,                                   /* sq_repeat */
    PyHirschXLDContArray_GetItem,               /* sq_item */
};


PyObject* PyHirschXLDContArray_iter(PyObject *self)
{
  Py_INCREF(self);
  ((PyHirschXLDContArray*)self)->iter_pos = 0;
  return self;
}

PyObject* PyHirschXLDContArray_iternext(PyObject *self)
{
    PyHirschXLDContArray *p = (PyHirschXLDContArray *)self;
    Halcon::HXLDContArray *XLDContArray = (p->XLDContArray);

    if (p->iter_pos < XLDContArray->Num()) {
        PyObject *ret = PyHirschXLDCont_FromHXLDCont((*XLDContArray)[p->iter_pos]);
        p->iter_pos+=1;

        return ret;
    }
    else {
        /* Raising of standard StopIteration exception with empty value. */
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
}

PyObject *PyHirschXLDContArray_FromHXLDContArray(Halcon::HXLDContArray XLDContArray)
{
    PyHirschXLDContArray *v = (PyHirschXLDContArray*)PyObject_New(PyHirschXLDContArray, &PyHirschXLDContArrayType);
    v->XLDContArray = new Halcon::HXLDContArray(XLDContArray);

    return (PyObject*)v;
}

#if PY_MAJOR_VERSION >= 3
#define Py_TPFLAGS_HAVE_ITER 0
#endif

PyTypeObject PyHirschXLDContArrayType = {
    PyVarObject_HEAD_INIT(NULL, 0)
    "Hirsch.HXLDContArray",    /*tp_name*/
    sizeof(PyHirschXLDContArray), /*tp_basicsize*/
    0,                         /*tp_itemsize*/
    (destructor)PyHirschXLDContArray_dealloc,       /*tp_dealloc*/
    0,                         /*tp_print*/
    0,                         /*tp_getattr*/
    0,                         /*tp_setattr*/
    0,                         /*tp_compare*/
    0,                         /*tp_repr*/
    0,                         /*tp_as_number*/
    &PyHirschXLDContArray_sequence_methods,        /*tp_as_sequence*/
    0,                         /*tp_as_mapping*/
    0,                         /*tp_hash */
    0,                         /*tp_call*/
    0,                         /*tp_str*/
    0,                         /*tp_getattro*/
    0,                         /*tp_setattro*/
    0,                         /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_ITER,        /*tp_flags*/
    "PyHirschXLDContArray",        /* tp_doc */
    0,		               /* tp_traverse */
    0,		               /* tp_clear */
    0,		               /* tp_richcompare */
    0,		               /* tp_weaklistoffset */
    &PyHirschXLDContArray_iter,		 /* tp_iter */
    &PyHirschXLDContArray_iternext,         /* tp_iternext */
    PyHirschXLDContArray_methods,  /* tp_methods */
    0,                         /* tp_members */
    0,                         /* tp_getset */
    0,                         /* tp_base */
    0,                         /* tp_dict */
    0,                         /* tp_descr_get */
    0,                         /* tp_descr_set */
    0,                         /* tp_dictoffset */
    (initproc)PyHirschXLDContArray_init,          /* tp_init */
    0,                         /* tp_alloc */
    PyType_GenericNew,         /* tp_new */
};


void PyHirschXLDContArrayAddToModule(PyObject *m)
{
    Py_INCREF(&PyHirschXLDContArrayType);
    if (PyType_Ready(&PyHirschXLDContArrayType) < 0)
        return;
    PyModule_AddObject(m, "HXLDContArray", (PyObject *)&PyHirschXLDContArrayType);
}
