    {"WriteTemplate", (PyCFunction)PyHirschTemplate_WriteTemplate, METH_VARARGS, "WriteTemplate(FileName)\n\nWriting a template to file." },
    {"AdaptTemplate", (PyCFunction)PyHirschTemplate_AdaptTemplate, METH_VARARGS, "AdaptTemplate(Image)\n\nAdapting a template to the size of an image." },
    {"CreateTemplate", (PyCFunction)PyHirschTemplate_CreateTemplate, METH_VARARGS, "CreateTemplate(Template,FirstError,NumLevel,Optimize,GrayValues)\n\nPreparing a pattern for template matching." },
    {"ReadTemplate", (PyCFunction)PyHirschTemplate_ReadTemplate, METH_VARARGS, "ReadTemplate(FileName)\n\nReading a template from file." },
    {"Clone", (PyCFunction)PyHirschTemplate_Clone, METH_NOARGS, "Clone()\n\nDeep copy of all data represented by this object instance" },
    {"SetHandle", (PyCFunction)PyHirschTemplate_SetHandle, METH_VARARGS, "SetHandle(handle)\n\nSet new handle, taking ownership" },
    {"BestMatchMg", (PyCFunction)PyHirschTemplate_BestMatchMg, METH_VARARGS, "BestMatchMg(Image,MaxError,SubPixel,NumLevels,WhichLevels)\n\nSearching the best grayvalue matches in a pyramid." },
    {"FastMatchMg", (PyCFunction)PyHirschTemplate_FastMatchMg, METH_VARARGS, "FastMatchMg(Image,MaxError,NumLevel)\n\nSearching all good grayvalue matches in a pyramid." },
    {"BestMatch", (PyCFunction)PyHirschTemplate_BestMatch, METH_VARARGS, "BestMatch(Image,MaxError,SubPixel)\n\nSearching the best matching of a template and an image." },
    {"SetReferenceTemplate", (PyCFunction)PyHirschTemplate_SetReferenceTemplate, METH_VARARGS, "SetReferenceTemplate(Row,Column)\n\nDefine reference position for a matching template." },
    {"BestMatchRot", (PyCFunction)PyHirschTemplate_BestMatchRot, METH_VARARGS, "BestMatchRot(Image,AngleStart,AngleExtend,MaxError,SubPixel)\n\nSearching the best matching of a template and an image with rotation." },
    {"CreateTemplateRot", (PyCFunction)PyHirschTemplate_CreateTemplateRot, METH_VARARGS, "CreateTemplateRot(Template,NumLevel,AngleStart,AngleExtend,AngleStep,Optimize,GrayValues)\n\nPreparing a pattern for template matching with rotation." },
    {"BestMatchRotMg", (PyCFunction)PyHirschTemplate_BestMatchRotMg, METH_VARARGS, "BestMatchRotMg(Image,AngleStart,AngleExtend,MaxError,SubPixel,NumLevels)\n\nSearching the best matching of a template and a pyramid with rotation." },
    {"FastMatch", (PyCFunction)PyHirschTemplate_FastMatch, METH_VARARGS, "FastMatch(Image,MaxError)\n\nSearching all good matches of a template and an image." },
    {"SetOffsetTemplate", (PyCFunction)PyHirschTemplate_SetOffsetTemplate, METH_VARARGS, "SetOffsetTemplate(GrayOffset)\n\nGray value offset for template." },
    {"BestMatchPreMg", (PyCFunction)PyHirschTemplate_BestMatchPreMg, METH_VARARGS, "BestMatchPreMg(ImagePyramid,MaxError,SubPixel,NumLevels,WhichLevels)\n\nSearching the best grayvalue matches in a pre generated pyramid." },